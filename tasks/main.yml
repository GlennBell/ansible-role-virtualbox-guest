---
# tasks file for virtualbox-guest
- name: Remove OS installation of virtualbox guest additions
  package:
    name: "{{ virtualbox_os_packages }}"
    state: absent
  when: virtualbox_remove_os_packages is defined and virtualbox_remove_os_packages

- block:
    - name: Determine the host version
      shell: "VBoxManage --version | awk -F'[r_]' '{print $1}'"
      delegate_to: localhost
      register: host_vbox_version
      become: no

    - name: Check if virtualbox_version could be determined
      fail:
        msg: "Could not determine virtualbox_version - please specify this variable"
      when: not host_vbox_version.stdout

    - name: Override virtualbox_version if defaults set to auto
      set_fact:
        virtualbox_version: "{{ host_vbox_version.stdout }}"

  when: virtualbox_version == "auto"

- name: Determine if (the requested version of) virtualbox guest additions is installed
  shell: modinfo vboxguest 2>/dev/null|awk '/^version/{print $2}'
  register: vbox_guest_version
  changed_when: vbox_guest_version.stdout != virtualbox_version
  ignore_errors: yes

- block:
    - name: Check if the ISO file is present on the host
      stat: path="{{ virtualbox_iso }}"
      register: file_path
      ignore_errors: yes

    - name: Download ISO file when the requested version is not present on the host
      get_url:
        url: http://download.virtualbox.org/virtualbox/{{ virtualbox_version }}/VBoxGuestAdditions_{{ virtualbox_version }}.iso
        dest: "{{ virtualbox_iso }}"
      when: not file_path.stat.exists  # and not CD_path.stat.exists

    - name: Use correct ISO path (file or CD)
      set_fact: ISO_path="{{ file_path.stat.path if file_path.stat.exists else virtualbox_iso }}"

    - name: Mount VBoxGuestAdditions
      mount:
        name: /media/cdrom
        src: "{{ ISO_path }}"
        fstype: iso9660
        opts: ro,noauto
        state: mounted
      register: mounted_ISO

    - name: Save the current list of packages for Debians
      block:
        - name: Query current list
          shell: dpkg-query -l > /tmp/before.txt
          when: virtualbox_keep is undefined or not virtualbox_keep

        - name: Install kernel headers for Debian
          apt:
            name: "linux-headers-{{ ansible_kernel }}"
            update_cache: yes
            cache_valid_time: 86400
            install-recommends: no
            state: present
          ignore_errors: yes

        - name: Install generic kernel headers for Debian
          apt:
            name: "linux-headers-{{ ansible_architecture }}"
            install-recommends: no
            state: present
          ignore_errors: yes

      when: ansible_os_family == "Debian"

    - name: Save the current list of packages for CentOSes
      block:
        - name: Save the current list of packages for CentOSes
          shell: rpm -qa > /tmp/before.txt
          when: virtualbox_keep is undefined or not virtualbox_keep

        - name: Install EPEL repo.
          yum:
            name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm
            state: present

        - name: Import EPEL GPG key.
          rpm_key:
            key: /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
            state: present

        - name: Install latest kernel and headers for CentOSes
          yum:
            name:
              ["kernel", "kernel-devel", "kernel-headers"]  #  "kernel-headers-{{ kernel.stdout }}",
            state: latest  # needed latest for dmks to find matching header
            update_cache: yes
          when: kernel is defined and kernel.stdout is defined

      when: ansible_os_family == "RedHat"

    - name: Install necessary packages for compiling
      package:
        name: ["bzip2", "dkms", "gcc", "make"]
        state: present

    - name: Build and install x11 VBoxGuestAdditions from file
      shell: /media/cdrom/VBoxLinuxAdditions.run
      when: virtualbox_x11 is defined and virtualbox_x11
      ignore_errors: yes

    - name: Build and install VBoxGuestAdditions from file
      shell: /media/cdrom/VBoxLinuxAdditions.run --nox11
      when: virtualbox_x11 is undefined or not virtualbox_x11
      ignore_errors: yes

    - block:
        - name: Check which packages are now installed for Debians
          shell: dpkg-query -l > /tmp/after.txt
          when: ansible_os_family == "Debian"

        - name: Check which packages are now installed for CentOSes
          shell: rpm -qa > /tmp/after.txt
          when: ansible_os_family == "RedHat"

        - name: Create a list of packages that were installed just for compilation
          shell: diff /tmp/before.txt /tmp/after.txt|awk '/>/{print $3}'
          register: installed

        - name: Remove packages that were installed for compilation
          package:
            name: "{{ installed.stdout_lines }}"
            state: absent

      when: virtualbox_keep is undefined or not virtualbox_keep

    - name: Remove build logfiles, artefacts, and the ISO file
      file:
        name: "{{ item }}"
        follow: yes
        state: absent
      with_items:
        - "{{ virtualbox_iso }}"
        - "/opt/VBoxGuestAdditions-{{ virtualbox_version }}/src"
        - /tmp/before.txt
        - /tmp/after.txt
        - "/usr/src/vboxguest-{{ virtualbox_version }}"
        - /var/lib/dkms/vboxguest
        - /var/log/vboxadd-install.log
        - /var/log/vboxadd-install-x11.log
        - /var/log/vboxadd-setup.log
        - /var/log/VBoxGuestAdditions.log
        - /var/log/VBoxGuestAdditions-uninstall.log

    - name: Unmount VBoxGuestAdditions ISO when it was mounted
      mount:
        path: "{{ virtualbox_iso }}"
        fstype: iso9660
        state: absent
      when: mounted_ISO is changed

  when: (vbox_guest_version.stdout != virtualbox_version)
